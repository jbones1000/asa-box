declare version "2.54.9";
declare compile_options "-single -scal -e pop_synth_og.dsp -o pop_synth.dsp";
declare library_path0 "/usr/local/Cellar/faust/2.54.9/share/faust/stdfaust.lib";
declare library_path1 "/usr/local/Cellar/faust/2.54.9/share/faust/envelopes.lib";
declare library_path2 "/usr/local/Cellar/faust/2.54.9/share/faust/maths.lib";
declare library_path3 "/usr/local/Cellar/faust/2.54.9/share/faust/platform.lib";
declare library_path4 "/usr/local/Cellar/faust/2.54.9/share/faust/basics.lib";
declare library_path5 "/usr/local/Cellar/faust/2.54.9/share/faust/signals.lib";
declare library_path6 "/usr/local/Cellar/faust/2.54.9/share/faust/oscillators.lib";
declare author "jeremyWY";
declare basics_lib_name "Faust Basic Element Library";
declare basics_lib_version "0.9";
declare copyright "GRAME";
declare envelopes_lib_adsr_author "Yann Orlarey and Andrey Bundin";
declare envelopes_lib_adsre_author "Julius O. Smith III";
declare envelopes_lib_adsre_licence "STK-4.3";
declare envelopes_lib_author "GRAME";
declare envelopes_lib_copyright "GRAME";
declare envelopes_lib_license "LGPL with exception";
declare envelopes_lib_name "Faust Envelope Library";
declare envelopes_lib_version "0.2";
declare filename "pop_synth.dsp";
declare license "LGPL with exception";
declare maths_lib_author "GRAME";
declare maths_lib_copyright "GRAME";
declare maths_lib_license "LGPL with exception";
declare maths_lib_name "Faust Math Library";
declare maths_lib_version "2.5";
declare name "pop_synth";
declare options "[midi:on][nvoices:12]";
declare oscillators_lib_name "Faust Oscillator Library";
declare oscillators_lib_version "0.3";
declare platform_lib_name "Generic Platform Library";
declare platform_lib_version "0.3";
declare signals_lib_name "Faust Signal Routing Library";
declare signals_lib_version "0.3";
ID_0 = hslider("freq", 4.4e+02f, 2e+01f, 2e+03f, 0.01f);
ID_1 = button("gate");
ID_2 = _, ID_1;
ID_3 = (ID_2 : +);
ID_4 = (ID_1 : mem);
ID_5 = ID_4, ID_1;
ID_6 = (ID_5 : >=);
ID_7 = _, ID_6;
ID_8 = (ID_7 : *);
ID_9 = ID_3 ~ ID_8;
ID_10 = hslider("fA1", 0.001f, 0.001f, 4.0f, 0.001f);
ID_11 = fconstant(int fSamplingFreq, <math.h>);
ID_12 = 1.0f, ID_11;
ID_13 = (ID_12 : max);
ID_14 = 1.92e+05f, ID_13;
ID_15 = (ID_14 : min);
ID_16 = ID_10, ID_15;
ID_17 = (ID_16 : *);
ID_18 = 1, ID_17;
ID_19 = (ID_18 : max);
ID_20 = 1, ID_19;
ID_21 = (ID_20 : /);
ID_22 = ID_9, ID_21;
ID_23 = (ID_22 : *);
ID_24 = hslider("fD1", 0.01f, 0.001f, 4.0f, 0.001f);
ID_25 = ID_24, ID_15;
ID_26 = (ID_25 : *);
ID_27 = 1, ID_26;
ID_28 = (ID_27 : max);
ID_29 = 1, ID_28;
ID_30 = (ID_29 : /);
ID_31 = ID_19, ID_30;
ID_32 = (ID_31 : *);
ID_33 = 1, ID_32;
ID_34 = (ID_33 : +);
ID_35 = ID_9, ID_30;
ID_36 = (ID_35 : *);
ID_37 = ID_34, ID_36;
ID_38 = (ID_37 : -);
ID_39 = ID_38, 0;
ID_40 = (ID_39 : max);
ID_41 = ID_23, ID_40;
ID_42 = ID_41 : min;
ID_43 = _, 1;
ID_44 = ID_43 : +;
ID_45 = ID_1, 0;
ID_46 = (ID_45 : ==);
ID_47 = _, ID_46;
ID_48 = ID_47 : *;
ID_49 = (ID_44 : ID_48);
ID_50 = ID_49 ~ _;
ID_51 = ID_50, ID_28;
ID_52 = (ID_51 : /);
ID_53 = 1, ID_52;
ID_54 = (ID_53 : -);
ID_55 = _, ID_54;
ID_56 = ID_55 : *;
ID_57 = 0, _;
ID_58 = ID_57 : max;
ID_59 = ID_56 : ID_58;
ID_60 = (ID_42 : ID_59);
ID_61 = hslider("freqDepth1", -5.0f, -1e+03f, 1e+03f, 1.0f);
ID_62 = ID_60, ID_61;
ID_63 = (ID_62 : *);
ID_64 = hslider("lfoDelay1", 0.4f, 0.0f, 5.0f, 0.01f);
ID_65 = ID_64, ID_15;
ID_66 = (ID_65 : *);
ID_67 = ID_1, ID_66;
ID_68 = (ID_67 : @);
ID_69 = ID_68, 0;
ID_70 = (ID_69 : >);
ID_71 = _, ID_70;
ID_72 = (ID_71 : *);
ID_73 = + ~ ID_72;
ID_74 = (ID_70 : ID_73);
ID_75 = hslider("lfoA1", 0.01f, 0.001f, 4.0f, 0.001f);
ID_76 = ID_75, ID_15;
ID_77 = ID_76 : *;
ID_78 = (ID_77 : int);
ID_79 = ID_74, ID_78;
ID_80 = (ID_79 : <);
ID_81 = _, mem;
ID_82 = ID_81 : -;
ID_83 = _, 0;
ID_84 = (ID_83 : >);
ID_85 = ID_84, _;
ID_86 = ID_85 : *;
ID_87 = ID_82 <: ID_86;
ID_88 = _ <: ID_87;
ID_89 = (ID_70 : ID_88);
ID_90 = ID_80, ID_89;
ID_91 = (ID_90 : |);
ID_92 = hslider("lfoS1", 0.5f, 0.0f, 1.0f, 0.01f);
ID_93 = (ID_70 : float);
ID_94 = ID_92, ID_93;
ID_95 = (ID_94 : *);
ID_96 = ID_95, ID_70;
ID_97 = ID_91, ID_96;
ID_98 = (ID_97 : select2);
ID_99 = 0.0f, ID_98;
ID_100 = ID_70, ID_99;
ID_101 = ID_100 : select2;
ID_102 = (ID_101 : \(x21).(\(x22).(((1.0f,((((((button("gate"),(hslider("lfoDelay1", 0.4f, 0.0f, 5.0f, 0.01f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : @),0 : >),hslider("lfoR1", 1.0f, 0.001f, 4.0f, 0.001f),(((((button("gate"),(hslider("lfoDelay1", 0.4f, 0.0f, 5.0f, 0.01f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : @),0 : > : +~(_,((button("gate"),(hslider("lfoDelay1", 0.4f, 0.0f, 5.0f, 0.01f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : @),0 : >) : *)),(hslider("lfoA1", 0.01f, 0.001f, 4.0f, 0.001f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : * : int) : <),((button("gate"),(hslider("lfoDelay1", 0.4f, 0.0f, 5.0f, 0.01f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : @),0 : > : _<:_,mem : -<:(_,0 : >),_ : *) : |),hslider("lfoD1", 0.01f, 0.001f, 4.0f, 0.001f),hslider("lfoA1", 0.01f, 0.001f, 4.0f, 0.001f) : select2) : select2),6.91f : / : abs),1.1920929e-07f : <),(-1.0f,(((((((button("gate"),(hslider("lfoDelay1", 0.4f, 0.0f, 5.0f, 0.01f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : @),0 : >),hslider("lfoR1", 1.0f, 0.001f, 4.0f, 0.001f),(((((button("gate"),(hslider("lfoDelay1", 0.4f, 0.0f, 5.0f, 0.01f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : @),0 : > : +~(_,((button("gate"),(hslider("lfoDelay1", 0.4f, 0.0f, 5.0f, 0.01f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : @),0 : >) : *)),(hslider("lfoA1", 0.01f, 0.001f, 4.0f, 0.001f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : * : int) : <),((button("gate"),(hslider("lfoDelay1", 0.4f, 0.0f, 5.0f, 0.01f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : @),0 : > : _<:_,mem : -<:(_,0 : >),_ : *) : |),hslider("lfoD1", 0.01f, 0.001f, 4.0f, 0.001f),hslider("lfoA1", 0.01f, 0.001f, 4.0f, 0.001f) : select2) : select2),6.91f : / : abs),1.1920929e-07f : <),((((button("gate"),(hslider("lfoDelay1", 0.4f, 0.0f, 5.0f, 0.01f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : @),0 : >),hslider("lfoR1", 1.0f, 0.001f, 4.0f, 0.001f),(((((button("gate"),(hslider("lfoDelay1", 0.4f, 0.0f, 5.0f, 0.01f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : @),0 : > : +~(_,((button("gate"),(hslider("lfoDelay1", 0.4f, 0.0f, 5.0f, 0.01f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : @),0 : >) : *)),(hslider("lfoA1", 0.01f, 0.001f, 4.0f, 0.001f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : * : int) : <),((button("gate"),(hslider("lfoDelay1", 0.4f, 0.0f, 5.0f, 0.01f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : @),0 : > : _<:_,mem : -<:(_,0 : >),_ : *) : |),hslider("lfoD1", 0.01f, 0.001f, 4.0f, 0.001f),hslider("lfoA1", 0.01f, 0.001f, 4.0f, 0.001f) : select2) : select2),6.91f : /),1.0f : select2),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min : float) : *) : / : exp),0.0f : select2) : -),x21 : *),(((((((button("gate"),(hslider("lfoDelay1", 0.4f, 0.0f, 5.0f, 0.01f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : @),0 : >),hslider("lfoR1", 1.0f, 0.001f, 4.0f, 0.001f),(((((button("gate"),(hslider("lfoDelay1", 0.4f, 0.0f, 5.0f, 0.01f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : @),0 : > : +~(_,((button("gate"),(hslider("lfoDelay1", 0.4f, 0.0f, 5.0f, 0.01f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : @),0 : >) : *)),(hslider("lfoA1", 0.01f, 0.001f, 4.0f, 0.001f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : * : int) : <),((button("gate"),(hslider("lfoDelay1", 0.4f, 0.0f, 5.0f, 0.01f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : @),0 : > : _<:_,mem : -<:(_,0 : >),_ : *) : |),hslider("lfoD1", 0.01f, 0.001f, 4.0f, 0.001f),hslider("lfoA1", 0.01f, 0.001f, 4.0f, 0.001f) : select2) : select2),6.91f : / : abs),1.1920929e-07f : <),(-1.0f,(((((((button("gate"),(hslider("lfoDelay1", 0.4f, 0.0f, 5.0f, 0.01f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : @),0 : >),hslider("lfoR1", 1.0f, 0.001f, 4.0f, 0.001f),(((((button("gate"),(hslider("lfoDelay1", 0.4f, 0.0f, 5.0f, 0.01f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : @),0 : > : +~(_,((button("gate"),(hslider("lfoDelay1", 0.4f, 0.0f, 5.0f, 0.01f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : @),0 : >) : *)),(hslider("lfoA1", 0.01f, 0.001f, 4.0f, 0.001f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : * : int) : <),((button("gate"),(hslider("lfoDelay1", 0.4f, 0.0f, 5.0f, 0.01f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : @),0 : > : _<:_,mem : -<:(_,0 : >),_ : *) : |),hslider("lfoD1", 0.01f, 0.001f, 4.0f, 0.001f),hslider("lfoA1", 0.01f, 0.001f, 4.0f, 0.001f) : select2) : select2),6.91f : / : abs),1.1920929e-07f : <),((((button("gate"),(hslider("lfoDelay1", 0.4f, 0.0f, 5.0f, 0.01f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : @),0 : >),hslider("lfoR1", 1.0f, 0.001f, 4.0f, 0.001f),(((((button("gate"),(hslider("lfoDelay1", 0.4f, 0.0f, 5.0f, 0.01f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : @),0 : > : +~(_,((button("gate"),(hslider("lfoDelay1", 0.4f, 0.0f, 5.0f, 0.01f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : @),0 : >) : *)),(hslider("lfoA1", 0.01f, 0.001f, 4.0f, 0.001f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : * : int) : <),((button("gate"),(hslider("lfoDelay1", 0.4f, 0.0f, 5.0f, 0.01f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : *) : @),0 : > : _<:_,mem : -<:(_,0 : >),_ : *) : |),hslider("lfoD1", 0.01f, 0.001f, 4.0f, 0.001f),hslider("lfoA1", 0.01f, 0.001f, 4.0f, 0.001f) : select2) : select2),6.91f : /),1.0f : select2),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min : float) : *) : / : exp),0.0f : select2),x22 : *) : +)~_));
ID_103 = hslider("lfoRate1", 5.0f, 0.0f, 2e+01f, 0.001f);
ID_104 = ID_102, ID_103;
ID_105 = (ID_104 : *);
ID_106 = ID_105, ID_15;
ID_107 = (ID_106 : /);
ID_108 = _, ID_107;
ID_109 = (ID_108 : +);
ID_110 = ID_109, 0;
ID_111 = 0, ID_110;
ID_112 = ID_111 : select2;
ID_113 = (ID_112 : \(x23).(x23,(x23 : floor) : -));
ID_114 = ID_113 ~ _;
ID_115 = _, 1.0f;
ID_116 = ID_115 : *;
ID_117 = (ID_114 : ID_116);
ID_118 = ID_117, 6.2831855f;
ID_119 = ID_118 : *;
ID_120 = cos, 0.5f;
ID_121 = ID_120 : *;
ID_122 = (ID_119 : ID_121);
ID_123 = ID_122, 0.5f;
ID_124 = (ID_123 : *);
ID_125 = ID_124, 0.5f;
ID_126 = (ID_125 : +);
ID_127 = hslider("lfoDepth1", 1e+01f, 0.0f, 4e+02f, 1.0f);
ID_128 = ID_126, ID_127;
ID_129 = (ID_128 : *);
ID_130 = ID_63, ID_129;
ID_131 = (ID_130 : +);
ID_132 = ID_0, ID_131;
ID_133 = (ID_132 : +);
ID_134 = ID_133, ID_15;
ID_135 = (ID_134 : /);
ID_136 = _, ID_135;
ID_137 = (ID_136 : +);
ID_138 = ID_137, 0;
ID_139 = 0, ID_138;
ID_140 = ID_139 : select2;
ID_141 = (ID_140 : \(x11).(x11,(x11 : floor) : -));
ID_142 = ID_141 ~ _;
ID_143 = (1 : float);
ID_144 = _, ID_143;
ID_145 = ID_144 : *;
ID_146 = (ID_142 : ID_145);
ID_147 = ID_146, 6.2831855f;
ID_148 = ID_147 : *;
ID_149 = (ID_148 : ID_121);
ID_150 = ID_0, 2.001f;
ID_151 = (ID_150 : *);
ID_152 = ID_151, ID_131;
ID_153 = (ID_152 : +);
ID_154 = ID_153, ID_15;
ID_155 = (ID_154 : /);
ID_156 = _, ID_155;
ID_157 = (ID_156 : +);
ID_158 = ID_157, 0;
ID_159 = 0, ID_158;
ID_160 = ID_159 : select2;
ID_161 = (ID_160 : \(x11).(x11,(x11 : floor) : -));
ID_162 = ID_161 ~ _;
ID_163 = (ID_162 : ID_145);
ID_164 = ID_163, 6.2831855f;
ID_165 = ID_164 : *;
ID_166 = (ID_165 : ID_121);
ID_167 = ID_166, 6;
ID_168 = (ID_167 : /);
ID_169 = ID_0, 3.01f;
ID_170 = (ID_169 : *);
ID_171 = ID_170, ID_131;
ID_172 = (ID_171 : +);
ID_173 = ID_172, ID_15;
ID_174 = (ID_173 : /);
ID_175 = _, ID_174;
ID_176 = (ID_175 : +);
ID_177 = ID_176, 0;
ID_178 = 0, ID_177;
ID_179 = ID_178 : select2;
ID_180 = (ID_179 : \(x11).(x11,(x11 : floor) : -));
ID_181 = ID_180 ~ _;
ID_182 = (ID_181 : ID_145);
ID_183 = ID_182, 6.2831855f;
ID_184 = ID_183 : *;
ID_185 = (ID_184 : ID_121);
ID_186 = ID_185, 10;
ID_187 = (ID_186 : /);
ID_188 = ID_168, ID_187;
ID_189 = ID_149, ID_188;
ID_190 = (ID_45 : >);
ID_191 = _, ID_190;
ID_192 = (ID_191 : *);
ID_193 = + ~ ID_192;
ID_194 = (ID_190 : ID_193);
ID_195 = hslider("ampA1", 1.4f, 0.001f, 4.0f, 0.001f);
ID_196 = ID_195, ID_15;
ID_197 = ID_196 : *;
ID_198 = (ID_197 : int);
ID_199 = ID_194, ID_198;
ID_200 = (ID_199 : <);
ID_201 = (ID_190 : ID_88);
ID_202 = ID_200, ID_201;
ID_203 = (ID_202 : |);
ID_204 = hslider("ampS1", 0.5f, 0.0f, 1.0f, 0.01f);
ID_205 = (ID_190 : float);
ID_206 = ID_204, ID_205;
ID_207 = (ID_206 : *);
ID_208 = ID_207, ID_190;
ID_209 = ID_203, ID_208;
ID_210 = (ID_209 : select2);
ID_211 = 0.0f, ID_210;
ID_212 = ID_190, ID_211;
ID_213 = ID_212 : select2;
ID_214 = (ID_213 : \(x24).(\(x25).(((1.0f,(((((button("gate"),0 : >),hslider("ampR1", 2.0f, 0.001f, 4.0f, 0.001f),((((button("gate"),0 : > : +~(_,(button("gate"),0 : >) : *)),(hslider("ampA1", 1.4f, 0.001f, 4.0f, 0.001f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : * : int) : <),(button("gate"),0 : > : _<:_,mem : -<:(_,0 : >),_ : *) : |),hslider("ampD1", 2.0f, 0.001f, 4.0f, 0.001f),hslider("ampA1", 1.4f, 0.001f, 4.0f, 0.001f) : select2) : select2),6.91f : / : abs),1.1920929e-07f : <),(-1.0f,((((((button("gate"),0 : >),hslider("ampR1", 2.0f, 0.001f, 4.0f, 0.001f),((((button("gate"),0 : > : +~(_,(button("gate"),0 : >) : *)),(hslider("ampA1", 1.4f, 0.001f, 4.0f, 0.001f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : * : int) : <),(button("gate"),0 : > : _<:_,mem : -<:(_,0 : >),_ : *) : |),hslider("ampD1", 2.0f, 0.001f, 4.0f, 0.001f),hslider("ampA1", 1.4f, 0.001f, 4.0f, 0.001f) : select2) : select2),6.91f : / : abs),1.1920929e-07f : <),(((button("gate"),0 : >),hslider("ampR1", 2.0f, 0.001f, 4.0f, 0.001f),((((button("gate"),0 : > : +~(_,(button("gate"),0 : >) : *)),(hslider("ampA1", 1.4f, 0.001f, 4.0f, 0.001f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : * : int) : <),(button("gate"),0 : > : _<:_,mem : -<:(_,0 : >),_ : *) : |),hslider("ampD1", 2.0f, 0.001f, 4.0f, 0.001f),hslider("ampA1", 1.4f, 0.001f, 4.0f, 0.001f) : select2) : select2),6.91f : /),1.0f : select2),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min : float) : *) : / : exp),0.0f : select2) : -),x24 : *),((((((button("gate"),0 : >),hslider("ampR1", 2.0f, 0.001f, 4.0f, 0.001f),((((button("gate"),0 : > : +~(_,(button("gate"),0 : >) : *)),(hslider("ampA1", 1.4f, 0.001f, 4.0f, 0.001f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : * : int) : <),(button("gate"),0 : > : _<:_,mem : -<:(_,0 : >),_ : *) : |),hslider("ampD1", 2.0f, 0.001f, 4.0f, 0.001f),hslider("ampA1", 1.4f, 0.001f, 4.0f, 0.001f) : select2) : select2),6.91f : / : abs),1.1920929e-07f : <),(-1.0f,((((((button("gate"),0 : >),hslider("ampR1", 2.0f, 0.001f, 4.0f, 0.001f),((((button("gate"),0 : > : +~(_,(button("gate"),0 : >) : *)),(hslider("ampA1", 1.4f, 0.001f, 4.0f, 0.001f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : * : int) : <),(button("gate"),0 : > : _<:_,mem : -<:(_,0 : >),_ : *) : |),hslider("ampD1", 2.0f, 0.001f, 4.0f, 0.001f),hslider("ampA1", 1.4f, 0.001f, 4.0f, 0.001f) : select2) : select2),6.91f : / : abs),1.1920929e-07f : <),(((button("gate"),0 : >),hslider("ampR1", 2.0f, 0.001f, 4.0f, 0.001f),((((button("gate"),0 : > : +~(_,(button("gate"),0 : >) : *)),(hslider("ampA1", 1.4f, 0.001f, 4.0f, 0.001f),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min) : * : int) : <),(button("gate"),0 : > : _<:_,mem : -<:(_,0 : >),_ : *) : |),hslider("ampD1", 2.0f, 0.001f, 4.0f, 0.001f),hslider("ampA1", 1.4f, 0.001f, 4.0f, 0.001f) : select2) : select2),6.91f : /),1.0f : select2),(1.92e+05f,(1.0f,fconstant(int fSamplingFreq, <math.h>) : max) : min : float) : *) : / : exp),0.0f : select2),x25 : *) : +)~_));
ID_215 = _, ID_214;
ID_216 = ID_215 : *;
ID_217 = (ID_189 :> ID_216);
ID_218 = hslider("gain", 0.0f, 0.0f, 1.0f, 0.001f);
ID_219 = ID_217, ID_218;
ID_220 = ID_219 : *;
process = ID_220;
